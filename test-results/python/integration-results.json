{"created": 1757896920.8700402, "duration": 1.2573580741882324, "exitcode": 0, "root": "/home/runner/work/tony_tesla/tony_tesla", "environment": {}, "summary": {"passed": 11, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/integration", "type": "Package"}]}, {"nodeid": "tests/integration/test_tony_server.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_tony_server.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_tony_server.py::TestClient", "type": "Class"}, {"nodeid": "tests/integration/test_tony_server.py::test_search_function", "type": "Function", "lineno": 62}, {"nodeid": "tests/integration/test_tony_server.py::test_parse_tool_call", "type": "Function", "lineno": 119}, {"nodeid": "tests/integration/test_tony_server.py::test_make_vapi_response", "type": "Function", "lineno": 128}, {"nodeid": "tests/integration/test_tony_server.py::test_vapi_assistant_call_input", "type": "Function", "lineno": 145}, {"nodeid": "tests/integration/test_tony_server.py::test_vapi_assistant_call_input_non_igor", "type": "Function", "lineno": 211}, {"nodeid": "tests/integration/test_tony_server.py::test_is_igor_caller", "type": "Function", "lineno": 277}, {"nodeid": "tests/integration/test_tony_server.py::test_get_caller_number", "type": "Function", "lineno": 292}, {"nodeid": "tests/integration/test_tony_server.py::test_apply_caller_restrictions", "type": "Function", "lineno": 322}, {"nodeid": "tests/integration/test_tony_server.py::test_assistant_endpoint_logs_failure", "type": "Function", "lineno": 370}, {"nodeid": "tests/integration/test_tony_server.py::test_send_text_integration", "type": "Coroutine", "lineno": 409}, {"nodeid": "tests/integration/test_tony_server.py::test_send_text_ifttt_integration", "type": "Coroutine", "lineno": 502}]}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_tony_server.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/integration/test_tony_server.py::test_search_function", "lineno": 62, "outcome": "passed", "keywords": ["test_search_function", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0008429530000029217, "outcome": "passed"}, "call": {"duration": 0.17942533099999736, "outcome": "passed", "stdout": "dict(request.headers): {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate, zstd', 'connection': 'keep-alive', 'user-agent': 'testclient', 'x-vapi-secret': 'test_secret', 'content-length': '173', 'content-type': 'application/json'}\nauth_line: Bearer test_pplx_key\npayload: {'model': 'sonar-pro', 'messages': [{'role': 'system', 'content': 'Be precise and concise.'}, {'role': 'user', 'content': 'What is the weather in Seattle?'}]}\nheaders: {'accept': 'application/json', 'content-type': 'application/json', 'authorization': 'Bearer test_pplx_key'}\nsearch_response.json(): {'id': '2fb30930-796a-405d-be66-12fa7f54db75', 'model': 'sonar-pro', 'created': 1742044995, 'usage': {'prompt_tokens': 12, 'completion_tokens': 356, 'total_tokens': 368}, 'object': 'chat.completion', 'choices': [{'index': 0, 'finish_reason': 'stop', 'message': {'role': 'assistant', 'content': 'The weather in Seattle is currently chilly with intervals of clouds and sun.'}}]}\nvapi_response: {'results': [{'toolCallId': 'toolu_01FDyjjUG1ig7hP9YQ6MQXhX', 'result': 'The weather in Seattle is currently chilly with intervals of clouds and sun.'}]}\n"}, "teardown": {"duration": 0.000793050000005735, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_parse_tool_call", "lineno": 119, "outcome": "passed", "keywords": ["test_parse_tool_call", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.00043090400000522777, "outcome": "passed"}, "call": {"duration": 0.00018559600000145338, "outcome": "passed"}, "teardown": {"duration": 0.0006777250000027379, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_make_vapi_response", "lineno": 128, "outcome": "passed", "keywords": ["test_make_vapi_response", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0002989480000010758, "outcome": "passed"}, "call": {"duration": 0.00017147999999878039, "outcome": "passed"}, "teardown": {"duration": 0.0006182130000027541, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_vapi_assistant_call_input", "lineno": 145, "outcome": "passed", "keywords": ["test_vapi_assistant_call_input", "usefixtures", "pytestmark", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0005081279999998856, "outcome": "passed"}, "call": {"duration": 0.1571537780000014, "outcome": "passed", "stdout": "dict(request.headers): {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate, zstd', 'connection': 'keep-alive', 'user-agent': 'testclient', 'x-vapi-secret': 'test_secret', 'content-length': '603', 'content-type': 'application/json'}\ninput: {'message': {'timestamp': 1736039875874, 'type': 'assistant-request', 'call': {'id': 'xxx-xxx', 'orgId': 'xxx-xxx', 'createdAt': '2025-01-05T01:17:55.739Z', 'updatedAt': '2025-01-05T01:17:55.739Z', 'type': 'inbound Phone Call', 'status': 'ringing', 'phoneCallProvider': 'twilio', 'phoneCallProviderId': 'xxx-xxx', 'phoneCallTransport': 'pstn', 'phoneNumberId': 'xxx-xxx', 'assistantId': None, 'squadId': None, 'customer': {'number': '+1xxx-xxx', 'phoneNumber': {'id': 'xxx-xxx', 'orgId': 'xxx-xxx', 'assistantId': None, 'number': '+1xxx-xxx', 'createdAt': '2024-04-12T16:35:14.400Z', 'updatedAt': '2024-11-27T17:14:08.833Z', 'provider': 'twilio'}}}}}\nlen(tony): 1\n"}, "teardown": {"duration": 0.0007702670000000467, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_vapi_assistant_call_input_non_igor", "lineno": 211, "outcome": "passed", "keywords": ["test_vapi_assistant_call_input_non_igor", "usefixtures", "pytestmark", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0005684999999999718, "outcome": "passed"}, "call": {"duration": 0.02697504399999673, "outcome": "passed", "stdout": "dict(request.headers): {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate, zstd', 'connection': 'keep-alive', 'user-agent': 'testclient', 'x-vapi-secret': 'test_secret', 'content-length': '606', 'content-type': 'application/json'}\ninput: {'message': {'timestamp': 1736039875874, 'type': 'assistant-request', 'call': {'id': 'xxx-xxx', 'orgId': 'xxx-xxx', 'createdAt': '2025-01-05T01:17:55.739Z', 'updatedAt': '2025-01-05T01:17:55.739Z', 'type': 'inbound Phone Call', 'status': 'ringing', 'phoneCallProvider': 'twilio', 'phoneCallProviderId': 'xxx-xxx', 'phoneCallTransport': 'pstn', 'phoneNumberId': 'xxx-xxx', 'assistantId': None, 'squadId': None, 'customer': {'number': '+11234567890', 'phoneNumber': {'id': 'xxx-xxx', 'orgId': 'xxx-xxx', 'assistantId': None, 'number': '+1xxx-xxx', 'createdAt': '2024-04-12T16:35:14.400Z', 'updatedAt': '2024-11-27T17:14:08.833Z', 'provider': 'twilio'}}}}}\nlen(tony): 1\n"}, "teardown": {"duration": 0.0007424759999992148, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_is_igor_caller", "lineno": 277, "outcome": "passed", "keywords": ["test_is_igor_caller", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0003407960000032517, "outcome": "passed"}, "call": {"duration": 0.0009197860000043079, "outcome": "passed", "stdout": "Missing 'call' key\n"}, "teardown": {"duration": 0.0006747489999980871, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_get_caller_number", "lineno": 292, "outcome": "passed", "keywords": ["test_get_caller_number", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0002926260000037928, "outcome": "passed"}, "call": {"duration": 0.001121122000000696, "outcome": "passed", "stdout": "Missing 'number' key\nMissing 'customer' key\nMissing 'call' key\nMissing 'message' key\nMissing 'message' key\nInput is None\n"}, "teardown": {"duration": 0.0006333310000030679, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_apply_caller_restrictions", "lineno": 322, "outcome": "passed", "keywords": ["test_apply_caller_restrictions", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.00029934900000228026, "outcome": "passed"}, "call": {"duration": 0.0002747119999995107, "outcome": "passed"}, "teardown": {"duration": 0.0006292739999977925, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_assistant_endpoint_logs_failure", "lineno": 370, "outcome": "passed", "keywords": ["test_assistant_endpoint_logs_failure", "usefixtures", "pytestmark", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0005394169999988208, "outcome": "passed"}, "call": {"duration": 0.027172096999997564, "outcome": "passed", "stdout": "dict(request.headers): {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate, zstd', 'connection': 'keep-alive', 'user-agent': 'testclient', 'x-vapi-secret': 'test_secret', 'content-length': '398', 'content-type': 'application/json'}\ninput: {'message': {'timestamp': 1737157773126, 'type': 'status-update', 'status': 'ended', 'endedReason': 'assistant-request-returned-invalid-assistant', 'inboundPhoneCallDebuggingArtifacts': {'error': \"Couldn't Get Assistant...\", 'assistantRequestError': 'Invalid Assistant. Errors: [\\n  \"assistant.model.All fallbackModels\\'s elements must be unique\"\\n]', 'assistantRequestResponse': {'assistant': {'name': 'Tony'}}}}}\nfailure_reason: Invalid Assistant. Errors: [\n                  \"assistant.model.All fallbackModels's elements must be unique\"\n                ]\nMissing 'call' key\nMissing 'call' key\nlen(tony): 1\n"}, "teardown": {"duration": 0.0007704480000043645, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_send_text_integration", "lineno": 409, "outcome": "passed", "keywords": ["test_send_text_integration", "asyncio", "pytestmark", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0006345940000045402, "outcome": "passed"}, "call": {"duration": 0.010195170999999448, "outcome": "passed", "stdout": "Twilio environment check:\nTWILIO_ACCOUNT_SID exists:, TWILIO_ACCOUNT_SID in os.environ: True\nTWILIO_AUTH_TOKEN exists:, TWILIO_AUTH_TOKEN in os.environ: True\nTWILIO_FROM_NUMBER exists:, TWILIO_FROM_NUMBER in os.environ: True\n\"TWILIO_FROM_NUMBER value:\": TWILIO_FROM_NUMBER value:\nos.environ.get(TWILIO_FROM_NUMBER): +13203734339\nSending message with params:\nTo:, to_number: +12068904339\nFrom:, os.environ[TWILIO_FROM_NUMBER]: +13203734339\nText:, text: Hello, this is a test message\n\"Twilio response:\": Twilio response:\nmessage.__dict__: {'_mock_return_value': sentinel.DEFAULT, '_mock_parent': None, '_mock_name': None, '_mock_new_name': '()', '_mock_new_parent': <Mock name='Client().messages.create' id='140120746140080'>, '_mock_sealed': False, '_spec_class': None, '_spec_set': None, '_spec_signature': None, '_mock_methods': None, '_spec_asyncs': [], '_mock_children': {}, '_mock_wraps': None, '_mock_delegate': None, '_mock_called': False, '_mock_call_args': None, '_mock_call_count': 0, '_mock_call_args_list': [], '_mock_mock_calls': [], 'method_calls': [], '_mock_unsafe': False, '_mock_side_effect': None, 'sid': 'SM12345'}\nTwilio environment check:\nTWILIO_ACCOUNT_SID exists:, TWILIO_ACCOUNT_SID in os.environ: True\nTWILIO_AUTH_TOKEN exists:, TWILIO_AUTH_TOKEN in os.environ: True\nTWILIO_FROM_NUMBER exists:, TWILIO_FROM_NUMBER in os.environ: True\n\"TWILIO_FROM_NUMBER value:\": TWILIO_FROM_NUMBER value:\nos.environ.get(TWILIO_FROM_NUMBER): +13203734339\nerror_msg: Unexpected error: Connection error\n"}, "teardown": {"duration": 0.000936797999997907, "outcome": "passed"}}, {"nodeid": "tests/integration/test_tony_server.py::test_send_text_ifttt_integration", "lineno": 502, "outcome": "passed", "keywords": ["test_send_text_ifttt_integration", "asyncio", "pytestmark", "test_tony_server.py", "integration", "tests", "tony_tesla", ""], "setup": {"duration": 0.0006949260000013169, "outcome": "passed"}, "call": {"duration": 0.1602301269999984, "outcome": "passed", "stdout": "IFTTT environment check:\nIFTTT_WEBHOOK_KEY exists:, IFTTT_WEBHOOK_KEY in os.environ: True\n\"IFTTT_WEBHOOK_SMS_EVENT exists:\": IFTTT_WEBHOOK_SMS_EVENT exists:\nIFTTT_WEBHOOK_SMS_EVENT in os.environ: True\nSending IFTTT webhook request:\n\"URL:\": URL:\nifttt_url: https://maker.ifttt.com/trigger/test_event/with/key/test_key\n\"Payload:\": Payload:\npayload: {'value1': 'Hello, this is a test message', 'value2': '+12068904339', 'value3': 'From Tony Tesla at 2025-09-14 17:42:00'}\nIFTTT response status:, response.status_code: 200\n\"IFTTT response text:\": IFTTT response text:\nresponse.text: Congratulations! You've fired the sms_event event\nIFTTT environment check:\nIFTTT_WEBHOOK_KEY exists:, IFTTT_WEBHOOK_KEY in os.environ: True\n\"IFTTT_WEBHOOK_SMS_EVENT exists:\": IFTTT_WEBHOOK_SMS_EVENT exists:\nIFTTT_WEBHOOK_SMS_EVENT in os.environ: True\nSending IFTTT webhook request:\n\"URL:\": URL:\nifttt_url: https://maker.ifttt.com/trigger/test_event/with/key/test_key\n\"Payload:\": Payload:\npayload: {'value1': 'Hello, this is a test message', 'value2': '+12068904339', 'value3': 'From Tony Tesla at 2025-09-14 17:42:00'}\nerror_msg: Failed to send webhook request: Connection failed\nIFTTT environment check:\nIFTTT_WEBHOOK_KEY exists:, IFTTT_WEBHOOK_KEY in os.environ: True\n\"IFTTT_WEBHOOK_SMS_EVENT exists:\": IFTTT_WEBHOOK_SMS_EVENT exists:\nIFTTT_WEBHOOK_SMS_EVENT in os.environ: True\nSending IFTTT webhook request:\nURL:, ifttt_url: https://maker.ifttt.com/trigger/test_event/with/key/\n\"Payload:\": Payload:\npayload: {'value1': 'Hello, this is a test message', 'value2': '+12068904339', 'value3': 'From Tony Tesla at 2025-09-14 17:42:00'}\nerror_msg: Failed to send webhook request: 404 Client Error: Not Found for url: https://maker.ifttt.com/trigger/test_event/with/key/\n"}, "teardown": {"duration": 0.000983365000003289, "outcome": "passed"}}], "warnings": [{"message": "coroutine 'AsyncClient.post' was never awaited", "category": "RuntimeWarning", "when": "runtest", "filename": "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/importlib/__init__.py", "lineno": 90}]}